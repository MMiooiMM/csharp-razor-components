@using WebApplication1.App.Services

<h1>Practice09</h1>

<h3>代辦清單 @todos.Count(todo => !todo.IsDone) 筆</h3>

<input placeholder="填寫代辦事項..." bind="@newTodo" />
<button onclick="@AddTodo">增加</button>
<button onclick="@DelTodo">清除完成事項</button>
<ul>
    @foreach (var item in todos.OrderBy(x => x.IsDone).Select((x, index) => new { todo = x, index }))
    {
        <li>
            <input id="@item.todo.GetHashCode()" type="checkbox" bind="@item.todo.IsDone" />
            <input bind="@item.todo.Title" />
            <button onclick="@(() => ReverseTodo(item.index))"> v </button>
        </li>
    }
</ul>

@foreach (var item in todos.OrderBy(x => x.IsDone).Select((x, index) => new { todo = x, index }))
{
    <button onclick="@(() => ReverseTodo(item.index))">反轉 @item.todo.Title 狀態</button>
}

<h3>完成 @todos.Count(todo => todo.IsDone) 筆</h3>

<ul>
    @foreach (var todo in todos.Where(x => x.IsDone))
    {
        <li>
            <span>@todo.Title</span>
        </li>
    }
</ul>

@functions {
    private IList<TodoItem> todos = new List<TodoItem>() {
        new TodoItem() { Title = "Test1" },
        new TodoItem() { Title = "Test2" },
        new TodoItem() { Title = "Test3" }
    };

    private string newTodo;

    private void AddTodo()
    {
        if (!string.IsNullOrWhiteSpace(newTodo))
        {
            todos.Add(new TodoItem { Title = newTodo });
            newTodo = string.Empty;
        }
    }

    private void DelTodo()
    {
        todos = todos.Where(x => !x.IsDone).ToList();
    }

    private void ReverseTodo(int i)
    {
        todos[i].IsDone = !todos[i].IsDone;
    }
}